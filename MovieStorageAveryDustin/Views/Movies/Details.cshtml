@model MovieStorageAveryDustin.Models.MovieResponse

@{ ViewData["Title"] = "Details"; }
<!--Used Scaffolding to make the create, read, update, delete, and details views-->
<h1>Details</h1>

<div>
    <h4>Movie</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Category)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Category)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.StartYear)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.StartYear)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DirectorName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DirectorName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Rating)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Rating)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Edit)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Edit)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.LentTo)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.LentTo)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Notes)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Notes)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.MovieId">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
